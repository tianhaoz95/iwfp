name: guardians of the pull requests
on:
  push:
    branches:
      - "actions/merge__*"
  pull_request:
    branches:
      - "master"
  schedule:
    - cron: 0 2 * * *
jobs:
  server-test:
    name: server test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: "12.16.2"
      - name: install Firebase CLI
        run: npm install -g firebase-tools
      - name: install dependencies
        working-directory: ./functions
        run: npm install
      - name: lint test
        working-directory: ./functions
        run: npm run lint
      - name: build test
        working-directory: ./functions
        run: npm run build
      - name: run unit test
        working-directory: ./functions
        run: npm test
      - name: run end to end test
        working-directory: ./functions
        run: npm run e2e
  build-server-docs:
    name: build server docs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: "12.16.2"
      - name: install dependencies
        working-directory: ./functions
        run: npm install
      - name: build docs
        working-directory: ./functions
        run: npm run docs
  build-app-docs:
    name: build app docs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: "12.x"
      - uses: subosito/flutter-action@v1
        with:
          flutter-version: "1.17.5"
          channel: "stable"
      - name: install dependencies
        working-directory: ./app
        run: flutter pub get
      - name: build docs
        working-directory: ./app
        run: FLUTTER_ROOT=$FLUTTER_HOME $FLUTTER_HOME/bin/cache/dart-sdk/bin/dartdoc --exclude 'dart:async,dart:collection,dart:convert,dart:core,dart:developer,dart:io,dart:isolate,dart:math,dart:typed_data,dart:ui,dart:ffi,dart:html,dart:js,dart:js_util'
  app-unit-test:
    name: app unit test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: subosito/flutter-action@v1
        with:
          flutter-version: "1.17.5"
          channel: "stable"
      - name: install Flutter dependencies
        working-directory: ./app
        run: flutter pub get
      - name: lint Dart code
        working-directory: ./app
        run: flutter analyze
      - name: run unit tests
        working-directory: ./app
        run: flutter test
  app-integration-test:
    name: app integration test
    needs:
      - app-unit-test
    strategy:
      matrix:
        device:
          - "iPad Pro (12.9-inch) (4th generation) (13.5)"
          - "iPhone 11 Pro Max (13.5)"
      fail-fast: false
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: "12.x"
      - uses: subosito/flutter-action@v1
        with:
          flutter-version: "1.17.5"
          channel: "stable"
      - name: use master channel
        run: flutter channel master
      - name: upgrade Flutter
        run: flutter upgrade
      - name: list all simulators
        run: xcrun instruments -s
      - name: start simulator
        run: |
          UDID=$(
            xcrun instruments -s |
            awk \
              -F ' *[][]' \
              -v 'device=${{ matrix.device }}' \
              '$1 == device { print $2 }'
          )
          xcrun simctl boot "${UDID:?No Simulator with this name found}"
      - name: install server dependencies
        working-directory: ./app
        run: flutter pub get
      - name: run offline device end to end test
        working-directory: ./app
        run: flutter drive --target=test_driver/app.dart
      - name: upload online screenshot
        uses: actions/upload-artifact@master
        with:
          name: online_screenshot_${{ matrix.device }}
          path: /tmp/screenshots
  server-app-test:
    name: end to end test
    needs:
      - server-test
      - app-unit-test
    strategy:
      matrix:
        device:
          - "iPad Pro (12.9-inch) (4th generation) (13.5)"
          - "iPhone 11 Pro Max (13.5)"
      fail-fast: false
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: "12.16.2"
      - uses: actions/setup-java@v1
        with:
          java-version: "12.x"
      - uses: subosito/flutter-action@v1
        with:
          flutter-version: "1.17.5"
          channel: "stable"
      - name: use master channel
        run: flutter channel master
      - name: upgrade Flutter
        run: flutter upgrade
      - name: install firebase CLI
        run: npm install -g firebase-tools
      - name: list all simulators
        run: xcrun instruments -s
      - name: start simulator
        run: |
          UDID=$(
            xcrun instruments -s |
            awk \
              -F ' *[][]' \
              -v 'device=${{ matrix.device }}' \
              '$1 == device { print $2 }'
          )
          xcrun simctl boot "${UDID:?No Simulator with this name found}"
      - name: install server dependencies
        working-directory: ./functions
        run: npm install
      - name: install server dependencies
        working-directory: ./app
        run: flutter pub get
      - name: run offline device end to end test
        working-directory: ./functions
        run: npm run device
      - name: upload online screenshot
        uses: actions/upload-artifact@master
        with:
          name: offline_screenshot_${{ matrix.device }}
          path: /tmp/screenshots
  build-web-app:
    name: build web app
    runs-on: ubuntu-latest
    needs:
      - app-unit-test
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: "12.x"
      - uses: subosito/flutter-action@v1
        with:
          flutter-version: "1.17.5"
          channel: "stable"
      - name: switch to master channel
        run: flutter channel master
      - name: enable flutter web
        run: flutter config --enable-web
      - name: check Flutter version
        run: flutter --version
      - name: install dependencies
        working-directory: ./app
        run: flutter pub get
      - name: build web
        working-directory: ./app
        run: flutter build web
  build-web-app-catalog:
    name: build web app catalog
    runs-on: ubuntu-latest
    needs:
      - app-unit-test
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: "12.x"
      - uses: subosito/flutter-action@v1
        with:
          flutter-version: "1.17.5"
          channel: "stable"
      - name: switch to master channel
        run: flutter channel master
      - name: enable flutter web
        run: flutter config --enable-web
      - name: check Flutter version
        run: flutter --version
      - name: install dependencies
        working-directory: ./app
        run: flutter pub get
      - name: build web app catalog
        working-directory: ./app
        run: flutter build web --target lib/entrypoint/ui.dart
  build-android-app:
    name: build Android app
    needs:
      - app-unit-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: "12.x"
      - uses: subosito/flutter-action@v1
        with:
          flutter-version: "1.17.5"
          channel: "stable"
      - name: prepare credentials
        env:
          ANDROID_SIGN_PWD: ${{ secrets.ANDROID_SIGN_PWD }}
          SECRET_REPO: ${{ secrets.SECRET_REPO }}
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
        run: ./scripts/setenv.sh
      - name: install dependencies
        working-directory: ./app
        run: flutter pub get
      - name: build app bundle
        working-directory: ./app
        run: flutter build appbundle
      - name: build apk package
        working-directory: ./app
        run: flutter build apk --split-per-abi
  build-ios-app:
    name: build iOS app
    needs:
      - app-unit-test
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: "12.x"
      - uses: subosito/flutter-action@v1
        with:
          flutter-version: "1.17.5"
          channel: "stable"
      - name: install dependencies
        working-directory: ./app
        run: flutter pub get
      - name: build ios
        working-directory: ./app
        run: flutter build ios --release --no-codesign
  build-macos-app:
    name: build macOS app
    needs:
      - app-unit-test
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: "12.x"
      - uses: subosito/flutter-action@v1
        with:
          flutter-version: "1.17.5"
          channel: "stable"
      - name: switch to master channel
        run: flutter channel master
      - name: enable desktop support
        run: flutter config --enable-macos-desktop
      - name: check Flutter version
        run: flutter --version
      - name: install dependencies
        working-directory: ./app
        run: flutter pub get
      - name: build macOS package
        working-directory: ./app
        run: flutter build macos
